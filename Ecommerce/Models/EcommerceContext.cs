// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Ecommerce.Models;

public partial class EcommerceContext : DbContext
{
    public EcommerceContext(DbContextOptions<EcommerceContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CATEGORY> CATEGORY { get; set; }

    public virtual DbSet<FILE> FILE { get; set; }

    public virtual DbSet<ORDER> ORDER { get; set; }

    public virtual DbSet<ORDER_DETAILS> ORDER_DETAILS { get; set; }

    public virtual DbSet<PRODUCT> PRODUCT { get; set; }

    public virtual DbSet<PROFILE> PROFILE { get; set; }

    public virtual DbSet<SHOP> SHOP { get; set; }

    public virtual DbSet<USER> USER { get; set; }

    public virtual DbSet<v_ProductCategory> v_ProductCategory { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CATEGORY>(entity =>
        {
            entity.Property(e => e.categoryName).HasMaxLength(500);
            entity.Property(e => e.description).HasMaxLength(200);
            entity.Property(e => e.imgUrl).HasMaxLength(255);
            entity.Property(e => e.remark).HasMaxLength(500);
        });

        modelBuilder.Entity<FILE>(entity =>
        {
            entity.Property(e => e.id).ValueGeneratedNever();
            entity.Property(e => e.dataName).HasMaxLength(50);
            entity.Property(e => e.descriptions)
                .HasMaxLength(500)
                .IsFixedLength();
            entity.Property(e => e.name).HasMaxLength(50);
            entity.Property(e => e.option1).HasMaxLength(255);
            entity.Property(e => e.remark).HasMaxLength(255);
            entity.Property(e => e.tableName).HasMaxLength(50);
        });

        modelBuilder.Entity<ORDER>(entity =>
        {
            entity.Property(e => e.address).HasMaxLength(255);
            entity.Property(e => e.email).HasMaxLength(255);
            entity.Property(e => e.name).HasMaxLength(255);
            entity.Property(e => e.note).HasMaxLength(500);
            entity.Property(e => e.phone)
                .IsRequired()
                .HasMaxLength(15)
                .IsFixedLength();
            entity.Property(e => e.remark).HasMaxLength(500);
            entity.Property(e => e.timer).HasColumnType("datetime");
        });

        modelBuilder.Entity<ORDER_DETAILS>(entity =>
        {
            entity.Property(e => e.note).HasMaxLength(500);
            entity.Property(e => e.productName).HasMaxLength(255);
            entity.Property(e => e.remark).HasMaxLength(255);
        });

        modelBuilder.Entity<PRODUCT>(entity =>
        {
            entity.Property(e => e.descriptions).HasMaxLength(1000);
            entity.Property(e => e.imgUrl).HasMaxLength(255);
            entity.Property(e => e.productName).HasMaxLength(200);
            entity.Property(e => e.test).HasMaxLength(50);

            entity.HasOne(d => d.category).WithMany(p => p.PRODUCT)
                .HasForeignKey(d => d.categoryId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_PRODUCT_CATEGORY");
        });

        modelBuilder.Entity<PROFILE>(entity =>
        {
            entity.Property(e => e.email).HasMaxLength(255);
            entity.Property(e => e.name).HasMaxLength(255);
            entity.Property(e => e.phone)
                .HasMaxLength(15)
                .IsUnicode(false);
        });

        modelBuilder.Entity<SHOP>(entity =>
        {
            entity.Property(e => e.address).HasMaxLength(255);
            entity.Property(e => e.descriptions).HasMaxLength(255);
            entity.Property(e => e.logoUrl).HasMaxLength(255);
            entity.Property(e => e.shopName).HasMaxLength(255);
        });

        modelBuilder.Entity<USER>(entity =>
        {
            entity.Property(e => e.passWord).HasMaxLength(200);
            entity.Property(e => e.roleName).HasMaxLength(50);
            entity.Property(e => e.userName)
                .IsRequired()
                .HasMaxLength(200);
        });

        modelBuilder.Entity<v_ProductCategory>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_ProductCategory");

            entity.Property(e => e.categoryName).HasMaxLength(500);
            entity.Property(e => e.descriptions).HasMaxLength(1000);
            entity.Property(e => e.imgUrl).HasMaxLength(255);
            entity.Property(e => e.productName).HasMaxLength(200);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}